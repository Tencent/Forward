language: cpp

compiler:
  - gcc

os: linux
dist: bionic

addons:
  apt:
    packages:
      - "python3"
      - "python3-pip"
      - "python3-dev"

cache:
  pip: true

jobs:
  include:
  - name: "CUDA 10.0 + TRT 7.0 + Torch 1.7"
    env:
    - CUDA=10.0.130-1
    - CUDA_SHORT=10.0
    - CUDNN_MAJOR=7
    - CUDNN=7.6.5.*
    - TENSORRT=7.0.0
    - UBUNTU_VERSION=ubuntu1804
    - TORCH=1.7.0
  - name: "CUDA 10.2 + TRT 7.2 + Torch 1.8"
    env:
    - CUDA=10.2.89-1
    - CUDA_SHORT=10.2
    - CUDNN_MAJOR=8
    - CUDNN=8.0.4.*
    - TENSORRT=7.2.3
    - UBUNTU_VERSION=ubuntu1804
    - TORCH=1.8.0

before_install:
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - wget https://developer.download.nvidia.com/compute/machine-learning/repos/${UBUNTU_VERSION}/x86_64/nvidia-machine-learning-repo-${UBUNTU_VERSION}_1.0.0-1_amd64.deb
  - sudo dpkg -i nvidia-machine-learning-repo-*.deb
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-} cuda-compiler-${CUDA_SHORT/./-} cuda-libraries-dev-${CUDA_SHORT/./-} cuda-nvtx-${CUDA_SHORT/./-} cuda-compat-${CUDA_SHORT/./-}
  - CUDNN_VERSION=${CUDNN}-1+cuda${CUDA_SHORT}
  - sudo apt install -y libcudnn${CUDNN_MAJOR}=${CUDNN_VERSION} libcudnn${CUDNN_MAJOR}-dev=${CUDNN_VERSION}
  - TENSORRT_VERSION=${TENSORRT}-1+cuda${CUDA_SHORT}
  - sudo apt install -y libnvinfer7=${TENSORRT_VERSION} libnvonnxparsers7=${TENSORRT_VERSION} libnvparsers7=${TENSORRT_VERSION} libnvinfer-plugin7=${TENSORRT_VERSION} libnvinfer-dev=${TENSORRT_VERSION} libnvonnxparsers-dev=${TENSORRT_VERSION} libnvparsers-dev=${TENSORRT_VERSION} libnvinfer-plugin-dev=${TENSORRT_VERSION} python-libnvinfer=${TENSORRT_VERSION} python3-libnvinfer=${TENSORRT_VERSION}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}

install: 
  - pip3 install --user $(whoami) --upgrade pip
  - pip3 install torch==${TORCH}+cpu -f https://download.pytorch.org/whl/torch_stable.html

before_script:
  - wget https://github.com/Neargye/tensorflow/releases/download/v1.15.0/libtensorflow-cpu-linux-x86_64-1.15.0.tar.gz -O tensorflow.tar.gz
  - mkdir tensorflow_lib
  - tar -xzvf tensorflow.tar.gz --directory tensorflow_lib 
  - cp -rv tensorflow_lib/lib/ source/third_party/tensorflow/ 
  - rm -rvf tensorflow_lib tensorflow.tar.gz
  - mkdir build
  - cd build
  - cmake .. -DENABLE_LOGGING=ON -DENABLE_PROFILING=ON -DBUILD_PYTHON_LIB=ON -DENABLE_TORCH=ON -DENABLE_TENSORFLOW=ON -DENABLE_KERAS=ON -DENABLE_RNN=ON -DPYTHON_EXECUTABLE=$(which python3)

script: make -j
